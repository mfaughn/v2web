.container
  / container
  %h1.self-link-parent.v2
    %span.sectioncount
      1
      %a{:name => "1"}
    HL7 v2+ - HL7 v2 refactored - Working Draft!
  %p{:style => "background-color: gold; border:1px solid maroon; padding: 5px;;"}
    This is the working draft for what is preliminary called
    %b HL7v2+
  %h1.self-link-parent.v2
    %span.sectioncount
      2
      %a{:name => "2"}
    Welcome to HL7 v2+&#153;
  %p HL7 v2+ is a standard for health care data exchange, built as a successor of HL7 v2.x, and published by HL7Â®.
  %p{:style => "padding: 5px; border-radius: 5px; border: 2px solid maroon; background: #ffffe6;"}
    %b First time here?
    %br
    %a{:href => "#{links[:toc]}"} Table of Contents
  #diagram
    %p.level-text
      %a{:href => "#{links[:intro]}"}
        %b Introduction to the HL7 v2+ Standard
    %p.content
      %a{:href => "#{links[:toc]}"} Table of Contents
    %p.level-text
      %b
        Level 1
      Basic framework on which the specification is built.
    #foundation.box_row.box_more
      .box{:id => ""}
        %p.head
          %a{:href => "#{links[:foundation]}", :style => "background-image: url('images/foundation.png');"}
            Foundation
        %p.content
          %span
            %a{:href => "#{links['Control']}"}
              Control
            (Messaging)
      #encoding.box
        %p.head
          %a{:href => "#{links['Encoding']}", :style => "background-image: url('images/workflow.png');"}
            %span Encoding
        %p.content
          %a{:href => "#{links[:ams]}"}
            Abstract Message Syntax (AMS)
          %br
          %a{:href => "#{links[:encoding_rules]}"}
            Encoding Rules 7 (ER)
          %br
          %a{:href => "#{links[:xml_encoding]}"}
            XML-Encoding (v2.x)ml
      #transport.box
        %p.head
          %a{:href => "#{links[:transport]}", :style => "background-image: url('images/linked-data.png');"}
            Transport
        %p.content
          %a{:href => "#{links[:hllp]}"}
            HLLP
          %br
          %a{:href => "#{links[:mllp]}"}
            MLLP
          %br
          %a{:href => "#{links[:http]}"}
            HTTP
    %p.level-text
      %b Level 2
      Vocabulary
    #terminology.box.box_row.box_one
      %p.head
        %a{:href => "#{links[:terminology]}", :style => "background-image: url('images/terminology.png');"}
          %span Terminology (Tables)
      %p.content
        %a{:href => "#{links[:code_system]}"}
          CodeSystem
        ,&nbsp;
        %a{:href => "#{links[:terminology]}"}
          ValueSet
    %p.level-text
      %b Level 3
      Building Blocks
    #technical.box.box_row.box_one
      %p.head
        %a{:href => "#{links[:linked_data_module]}", :style => "background-image: url('images/index.png');"}
          %span Technical
      %p.content
        %a{:href => "#{links['Data Types']}"} Data Types
        &gt;
        %a{:href => "#{links['Segments']}"} Segments
        &gt;
        %a{:href => "#{links['Message Structures']}"} Message Structures
    %p.level-text
      %b Level 4
      Domains
    #domains.box_row.box_more
      #administrative.box
        %p.head
          %a{:href => "#{links[:admin]}", :style => "background-image: url('images/secpriv.jpg'');"}
            Administrative
        %p.content
          %a{:href => "#{links[:master]}"}
            Master Files
          %br
          %a{:href => "#{links[:queries]}"}
            Queries
          %br
          %a{:href => "#{links[:personnel]}"}
            Personnel Mngmt
          %br
          %a{:href => "#{links[:app_mgmt]}"}
            Appl Mngmt
      #patient.box
        %p.head
          %a{:href => "#{links[:patient]}", :style => "background-image: url('images/administration.jpg'');"}
            Patient
        %p.content
          %a{:href => "#{links[:p_admin]}"}
            ADT
          %br
          %a{:href => "#{links[:p_referral]}"}
            Referral
          %br
          %a{:href => "#{links[:scheduling]}"}
            Scheduling
          %br
          %a{:href => "#{links[:mandm]}"}
            Materials Mngmt
      #financial.box
        %p.head
          %a{:href => "#{links[:financial]}", :style => "background-image: url('images/financial.png');"}
            Financial
        %p.content
          %a{:href => "#{links[:billing]}"}
            Billing
          %br
          %a{:href => "#{links[:claims]}"}
            Claims &amp; Reimbursement
      #clinical.box
        %p.head
          %a{:href => "#{links[:clinical]}", :style => "background-image: url('images/clinical.png');"}
            Clinical
        %p.content
          %a{:href => "#{links[:order_entry1]}"}
            General Orders
          %br
          %a{:href => "#{links[:order_entry1]}"}
            Laboratory Orders
          %br
          %a{:href => "#{links[:order_entry1]}"}
            Dietary Orders
          %br
          %a{:href => "#{links[:order_entry1]}"}
            Supply
          %br
          %a{:href => "#{links[:order_entry2]}"}
            Pharmacy/Treatment
          %br
          %a{:href => "#{links[:lab_auto]}"}
            Lab Automation
      #medication.box
        %p.head
          %a{:href => "#{links[:medical]}", :style => "background-image: url('images/medication.png');"}
            Medical
        %p.content
          %a{:href => "#{links[:p_care]}"}
            Patient Care
          %br
          %a{:href => "#{links[:records]}"}
            Medical Record
    %p.level-text
      %b  
        Level 5
      Conformance
    #conformance.box.box_row.box_one
      - conformance_url = links['Conformance']
      %p.head
        %a{:href => "#{conformance_url}", :style => "background-image: url('images/conformance.jpg'');"}
          Conformance
      %p.content
        - conformance_chapter_links.each do |link, title|
          %a{:href => "#{conformance_url}#{link}"}
            = title.gsub(/\s/,'&nbsp;')
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    %p.level-text
      %b
        Level 6
      Implementable Technology Specification
    %p.level-text
      %b
        Level 7
      Core Profiles
    #implementable-technology-specification.box_row.box_more
      .box{:id => 'datatype-flavors'}
        %p.head
          %a{:href => "#{links[:dt_flavors]}", :style => "background-image: url('images/index.png');"}
            Data Type Flavors
        %p.content
        %p.content TBD01390: This is where profile components like official data type flavors should be listed.
        %p
      .box{:id => 'ig-registry'}
        %p.head
          %a{:href => "#{links[:ig_registry]}", :style => "background-image: url('images/index.png');"}
            Implementation Guide Registry
        %p.content
        %p.content TBD01450: This is where implementations begin and guides should be listed. Maintaining the implementation guides on this platform will be too tedious, so that a list with hyperlinks should be sufficient.
        %p
  %h1.self-link-parent.v2
    %span.sectioncount
      3
      %a{:name => "3"}
    Complimentary Explanation on how this documentation is structured
  #tabs-1.ui-tabs.ui-widget.ui-widget-content.ui-corner-all
    %ul.ui-tabs-nav.ui-helper-reset.ui-helper-clearfix.ui-widget-header.ui-corner-all{:role => "tablist"}
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-1", "aria-expanded" => "false", "aria-labelledby" => "ui-id-1", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-1.ui-tabs-anchor{:href => "#tabs-1-folder-1", :role => "presentation", :tabindex => "-1"} Control
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-2", "aria-expanded" => "false", "aria-labelledby" => "ui-id-2", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-2.ui-tabs-anchor{:href => "#tabs-1-folder-2", :role => "presentation", :tabindex => "-1"} Encoding
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-3", "aria-expanded" => "false", "aria-labelledby" => "ui-id-3", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-3.ui-tabs-anchor{:href => "#tabs-1-folder-3", :role => "presentation", :tabindex => "-1"} Transport
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-4", "aria-expanded" => "false", "aria-labelledby" => "ui-id-4", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-4.ui-tabs-anchor{:href => "#tabs-1-folder-4", :role => "presentation", :tabindex => "-1"} Profile
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-5", "aria-expanded" => "false", "aria-labelledby" => "ui-id-5", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-5.ui-tabs-anchor{:href => "#tabs-1-folder-5", :role => "presentation", :tabindex => "-1"} Domains
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-6", "aria-expanded" => "false", "aria-labelledby" => "ui-id-6", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-6.ui-tabs-anchor{:href => "#tabs-1-folder-6", :role => "presentation", :tabindex => "-1"} Message Structures
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-7", "aria-expanded" => "false", "aria-labelledby" => "ui-id-7", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-7.ui-tabs-anchor{:href => "#tabs-1-folder-7", :role => "presentation", :tabindex => "-1"} Segments
      %li.ui-state-default.ui-corner-top.ui-tabs-active.ui-state-active{"aria-controls" => "tabs-1-folder-8", "aria-expanded" => "true", "aria-labelledby" => "ui-id-8", "aria-selected" => "true", :role => "tab", :tabindex => "0"}
        %a#ui-id-8.ui-tabs-anchor{:href => "#tabs-1-folder-8", :role => "presentation", :tabindex => "-1"} Vocabulary
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-9", "aria-expanded" => "false", "aria-labelledby" => "ui-id-9", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-9.ui-tabs-anchor{:href => "#tabs-1-folder-9", :role => "presentation", :tabindex => "-1"} Data Types
    #tabs-1-folder-1.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-1", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-1-inner
          %p
            %b Control
          %p Basics for HL7 v2.x
    #tabs-1-folder-2.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-2", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-2-inner
          %p
            %b Encoding
          %p Encoding manages the transformation from the logical models to serialized data.
          %ul
            %li AMS: Abstract Message Specification
            %li ER7: Encoding Rules 7 = vertical bar syntax
            %li v2.xml: Encoding using XML
            %li
              %font{:color => "red"} JSON: we need to think about that
    #tabs-1-folder-3.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-3", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-3-inner
          %p
            %b Transport
          %p There are different means of transport:
          %ul
            %li Files
            %li MLLP
            %li HTTP
          %p TBD (00025)
    #tabs-1-folder-4.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-4", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-4-inner
          %p
            %b Profile
          %p Text Profiles
          %p Chapter 2B should go there!
          %p TBD (00035)
    #tabs-1-folder-5.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-5", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-5-inner
          %p
            %b Domain
          %p The content (events message structures, etc.) will be organized into domains to get rid of the chapter view.
          %p The tricky thing is when generating the contents peresumably in a single step, which ssections should be left out and replaced by appropriate links? How to mark then? Also, for the skipped content we need a link back to where it is used. Here, if we see the message structures, we need a list of links telling us where this specific message structure is used.
          %p TBD (00045)
    #tabs-1-folder-6.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-6", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-6-inner
          %p
            %b Message Structure
          %p Currently there is a list of the message structures with links to the details. Do we need context information within those pages? Or do we need to group them together, eg. By message type?
          %p TBD (00053)!
    #tabs-1-folder-7.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-7", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-7-inner
          %p
            %b Segment
          / %p This is a list of segments
          / %ul
          /   - seg_list.each do |row|
          /     = row
    #tabs-1-folder-8.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "false", "aria-labelledby" => "ui-id-8", :role => "tabpanel"}
      #tbl
        #folder-1-8-inner
          %p
            %b Vocabulary
          %p Vocabulary will take care of the updated vocabulary model allowing for harmonizing with other product lines. We need to clarify
          %ul
            %li Links/Names in segments and data types: what is that?
            %li How to represent: Vocabulary domains, value sets and code systems? We have enhanced/updated/corrected the representation and management of tables. We should not violate the work done!
          %p TBD (00069)
    #tabs-1-folder-9.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-9", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-9-inner
          %p
            %b Data Types
          / %p List of all Data Types
          / %ul
          /   - dt_list.each do |row|
          /     = row
  %p Please be aware, that this is an intermediate version. We need to add an explanation here telling readers what has been changed and why.
  %p The following changes were applied to improve the way the standard is written:
  %ul
    %li Message Structures: tree structure, and Must Support and cardinality
  %ul
    %li Segments: Must-Support and Cardinality instead of optionality and repetitions
  %ul
    %li Domains: restructured into contents instead of chapters
  %ul
    %li Encoding: incorporated into the standard instead of different documents
  %ul
    %li Transport
    
    
  - # / JS and analytics only.
  - # /
  - #   Analytics Below
  - #   \==================================================
  - # %script{:src => "js/jquery.js"} :cdata
  - # %script{:src => "js/jquery-ui.min.js"} :cdata
  - # 
  - # /
  - #   Bootstrap core JavaScript
  - #   \==================================================
  - # / Placed at the end of the document so the pages load faster
  - # %script{:src => "js/jquery.js"} :cdata
  - # / note keep space here, otherwise it will be transformed to empty tag -> fails
  - # %script{:src => "js/bootstrap.min.js"} :cdata
  - # %script{:src => "js/respond.min.js"} :cdata
  - # %script{:src => "js/fhir.js"} :cdata
  - # /
  - #   Analytics Below
  - #   \==================================================
  - # 
  - # %script{:src => "js/jquery-ui.min.js"} :cdata
  :javascript
    try {
       var currentTabIndex = sessionStorage.getItem('fhir-resource-tab-index');
     } catch(exception){
     }
     if (!currentTabIndex)
       currentTabIndex = '0';
     $( '#tabs-1' ).tabs({
       active: currentTabIndex,
       activate: function( event, ui ) { store(ui.newTab.index()); }
     });
    function store(currentTab) {
      document.activeElement.blur();
      try {
        sessionStorage.setItem('fhir-resource-tab-index', currentTab);
      } catch(exception){
    }
     $( '#tabs' ).tabs('option', 'active', currentTab);
    }
  :javascript
    try {
       var currentTabIndex = sessionStorage.getItem('fhir-resource-tab-index');
     } catch(exception){ 
     }
     if (!currentTabIndex)
       currentTabIndex = '0';
    
    $( '#tabs-Extension' ).tabs({ 
    active: currentTabIndex, 
    activate: function( event, ui ) { store(ui.newTab.index()); } 
    });
    function store(currentTab) {
      document.activeElement.blur();
      try {
        sessionStorage.setItem('fhir-resource-tab-index', currentTab);
      } catch(exception){ 
      }
      $( '#tabs-Extension' ).tabs('option', 'active', currentTab);
    }
