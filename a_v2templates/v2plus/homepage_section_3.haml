    %span.sectioncount
      3
      %a{:name => "3"}
    Complimentary Explanation on how this documentation is structured
  #tabs-1.ui-tabs.ui-widget.ui-widget-content.ui-corner-all
    %ul.ui-tabs-nav.ui-helper-reset.ui-helper-clearfix.ui-widget-header.ui-corner-all{:role => "tablist"}
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-1", "aria-expanded" => "false", "aria-labelledby" => "ui-id-1", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-1.ui-tabs-anchor{:href => "#tabs-1-folder-1", :role => "presentation", :tabindex => "-1"} Control
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-2", "aria-expanded" => "false", "aria-labelledby" => "ui-id-2", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-2.ui-tabs-anchor{:href => "#tabs-1-folder-2", :role => "presentation", :tabindex => "-1"} Encoding
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-3", "aria-expanded" => "false", "aria-labelledby" => "ui-id-3", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-3.ui-tabs-anchor{:href => "#tabs-1-folder-3", :role => "presentation", :tabindex => "-1"} Transport
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-4", "aria-expanded" => "false", "aria-labelledby" => "ui-id-4", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-4.ui-tabs-anchor{:href => "#tabs-1-folder-4", :role => "presentation", :tabindex => "-1"} Profile
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-5", "aria-expanded" => "false", "aria-labelledby" => "ui-id-5", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-5.ui-tabs-anchor{:href => "#tabs-1-folder-5", :role => "presentation", :tabindex => "-1"} Domains
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-6", "aria-expanded" => "false", "aria-labelledby" => "ui-id-6", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-6.ui-tabs-anchor{:href => "#tabs-1-folder-6", :role => "presentation", :tabindex => "-1"} Message Structures
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-7", "aria-expanded" => "false", "aria-labelledby" => "ui-id-7", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-7.ui-tabs-anchor{:href => "#tabs-1-folder-7", :role => "presentation", :tabindex => "-1"} Segments
      %li.ui-state-default.ui-corner-top.ui-tabs-active.ui-state-active{"aria-controls" => "tabs-1-folder-8", "aria-expanded" => "true", "aria-labelledby" => "ui-id-8", "aria-selected" => "true", :role => "tab", :tabindex => "0"}
        %a#ui-id-8.ui-tabs-anchor{:href => "#tabs-1-folder-8", :role => "presentation", :tabindex => "-1"} Vocabulary
      %li.ui-state-default.ui-corner-top{"aria-controls" => "tabs-1-folder-9", "aria-expanded" => "false", "aria-labelledby" => "ui-id-9", "aria-selected" => "false", :role => "tab", :tabindex => "-1"}
        %a#ui-id-9.ui-tabs-anchor{:href => "#tabs-1-folder-9", :role => "presentation", :tabindex => "-1"} Data Types
    #tabs-1-folder-1.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-1", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-1-inner
          %p
            %b Control
          %p Basics for HL7 v2.x
    #tabs-1-folder-2.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-2", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-2-inner
          %p
            %b Encoding
          %p Encoding manages the transformation from the logical models to serialized data.
          %ul
            %li AMS: Abstract Message Specification
            %li ER7: Encoding Rules 7 = vertical bar syntax
            %li v2.xml: Encoding using XML
            %li
              %font{:color => "red"} JSON: we need to think about that
    #tabs-1-folder-3.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-3", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-3-inner
          %p
            %b Transport
          %p There are different means of transport:
          %ul
            %li Files
            %li MLLP
            %li HTTP
          %p TBD
    #tabs-1-folder-4.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-4", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-4-inner
          %p
            %b Profile
          %p Text Profiles
          %p Chapter 2B should go there!
          %p TBD
    #tabs-1-folder-5.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-5", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-5-inner
          %p
            %b Domain
          %p The content (events message structures, etc.) will be organized into domains to get rid of the chapter view.
          %p The tricky thing is when generating the contents peresumably in a single step, which ssections should be left out and replaced by appropriate links? How to mark then? Also, for the skipped content we need a link back to where it is used. Here, if we see the message structures, we need a list of links telling us where this specific message structure is used.
          %p TBD
    #tabs-1-folder-6.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-6", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-6-inner
          %p
            %b Message Structure
          %p Currently there is a list of the message structures with links to the details. Do we need context information within those pages? Or do we need to group them together, eg. By message type?
          %p TBD!
    #tabs-1-folder-7.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-7", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-7-inner
          %p
            %b Segment
          / %p This is a list of segments
          / %ul
          /   - seg_list.each do |row|
          /     = row
    #tabs-1-folder-8.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "false", "aria-labelledby" => "ui-id-8", :role => "tabpanel"}
      #tbl
        #folder-1-8-inner
          %p
            %b Vocabulary
          %p Vocabulary will take care of the updated vocabulary model allowing for harmonizing with other product lines. We need to clarify
          %ul
            %li Links/Names in segments and data types: what is that?
            %li How to represent: Vocabulary domains, value sets and code systems? We have enhanced/updated/corrected the representation and management of tables. We should not violate the work done!
          %p TBD
    #tabs-1-folder-9.ui-tabs-panel.ui-widget-content.ui-corner-bottom{"aria-hidden" => "true", "aria-labelledby" => "ui-id-9", :role => "tabpanel", :style => "display: none;"}
      #tbl
        #folder-1-9-inner
          %p
            %b Data Types
          / %p List of all Data Types
          / %ul
          /   - dt_list.each do |row|
          /     = row
  %p Please be aware, that this is an intermediate version. We need to add an explanation here telling readers what has been changed and why.
  %p The following changes were applied to improve the way the standard is written:
  %ul
    %li Message Structures: tree structure, and Must Support and cardinality
  %ul
    %li Segments: Must-Support and Cardinality instead of optionality and repetitions
  %ul
    %li Domains: restructured into contents instead of chapters
  %ul
    %li Encoding: incorporated into the standard instead of different documents
  %ul
    %li Transport